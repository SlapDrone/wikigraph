version: '3.8'

networks:
  postgres_network:
    driver: bridge

x-app-common: &app-common
  build:
    context: .
    dockerfile: Dockerfile
  volumes:
    - .:/app
    - /app/.venv
    - ./dags:/app/dags  # Mount the dags directory
    - ./logs:/app/logs  # Mount the logs directory
  environment:
    - PYTHONUNBUFFERED=1
    - NEO4J_URI=bolt://neo4j:7687
    - NEO4J_USER=${NEO4J_USER}
    - NEO4J_PASSWORD=${NEO4J_PASSWORD}
    - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
    - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres:5432/airflow
    - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
    - AIRFLOW__CORE__LOAD_EXAMPLES=False
    - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY}
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW_SECRET_KEY}
  depends_on:
    - neo4j
    - redis
    - postgres
  networks:
    - postgres_network


services:
  neo4j:
    image: neo4j:latest
    environment:
      NEO4J_AUTH: neo4j/testpassword
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - ./neo4j-data:/data
      - ./neo4j-logs:/logs
    networks:
      - postgres_network

  # test:
  #   <<: *app-common
  #   command: poetry run pytest tests/

  scheduler:
    <<: *app-common
    networks:
      - postgres_network
    command: airflow scheduler

  webserver:
    <<: *app-common
    ports: 
      - "8080:8080"
    command: airflow webserver --port 8080

  worker:
    <<: *app-common
    command: poetry run airflow celery worker

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    networks:
      - postgres_network

  redis:
    image: redis:latest
    networks:
      - postgres_network


  flower:
    <<: *app-common
    ports:
      - "5555:5555"
    command: airflow celery flower
